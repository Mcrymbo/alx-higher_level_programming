==========================================================
``BaseGeometry`` class from ``7-base_geometry`` module``
==========================================================

Importing the class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Passing integer as value
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name", 1)
    

passing no agument to the validator
    >>> geo = BaseGeometry()
    >>> geo.integer_validator()
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Trying printing area
    >>> geo = BaseGeometry()
    >>> geo.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented

passing 1 oargument to area method
    >>> geo = BaseGeometry()
    >>> geo.area(1)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

passing 2 arguments to area method
    >>> geo = BaseGeometry()
    >>> geo.area(2, 3)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 3 were given

Passing a boolean value
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name", False)
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer

Passing negative value
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name", -10)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0

Passing only name and no value
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

passing 3 arguments
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name", 3, 4)
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

Passing string value
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name", "3")
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer

passing a tuple to integer_validator method
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name", (3,))
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer

Passing non to validator method
    >>> geo = BaseGeometry()
    >>> geo.integer_validator("name", None)
    Traceback (most recent call last):
              ...
    TypeError: name must be an integer
