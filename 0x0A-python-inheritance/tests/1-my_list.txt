================================================================
``MyList`` class from ``1-my_list`` module
================================================================

Importing class from module
    >>> MyList = __import__('1-my_list').MyList

sorting a list of positive numbers
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(0)
    >>> my_list.append(5)
    >>> my_list.append(10)
    >>> my_list.append(2)
    >>> my_list.append(9)
    >>> my_list.print_sorted()
    [0, 2, 5, 7, 9, 10]

printing sorted list with repeated numbers
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(2)
    >>> my_list.append(5)
    >>> my_list.append(10)
    >>> my_list.append(2)
    >>> my_list.append(7)
    >>> my_list.print_sorted()
    [2, 2, 5, 7, 7, 10]

printing sorted list containing both negative and positive numbers
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(-2)
    >>> my_list.append(5)
    >>> my_list.append(-10)
    >>> my_list.append(2)
    >>> my_list.append(7)
    >>> my_list.print_sorted()
    [-10, -2, 2, 5, 7, 7]

Passing a list of only one number
    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [5]

passing empty list
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

checking for correct type
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True

checking if print_sorted list return new list
    >>> my_list = MyList()
    >>> my_list.append(10)
    >>> my_list.append(3)
    >>> my_list.append(4)
    >>> my_list.print_sorted()
    [3, 4, 10]
    >>> my_list
    [10, 3, 4]

checking the type of method
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>

Check if Mylist is a subclass of list
    >>> issubclass(MyList, list)
    True

check if MyList is an instance of class list
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

pass arguments to print_sorted method
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2, 3])
    Traceback (most recent call last):
    	      ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given
