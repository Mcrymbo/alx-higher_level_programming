==========================================
``matrix_divided`` that divides a matrix
==========================================

Importing function ``matrix_divided`` from ``2-matrix_divided.py``:
    >>> matrix_divided = __import__('2-matrix_divided.py').matrix_divided

Declaring the matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

Dividing the matrix by 2
    >>> matrix_divided(matrix, 2)
        [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

Dividing matrix by 0
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
		...
    ZeroDivisionError: division by zero

    >>> matrix1 = [(1, 2, 3), [4, 5, 6], [7, 8, 9]]

Setting the matrix to a tuple
    >>> matrix_divided(matrix1, 2)
    Traceback (most recent call last):
          ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Setting some elements of a matrix as not to be int and float
    >>> matrix_divided([[1, 2, 3], [4, 5, '6']], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Divisor set to string
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 'divisor')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

matrix with different lengths of row
    >>> matrix_divided([[1, 2], [4, 5, 6]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
