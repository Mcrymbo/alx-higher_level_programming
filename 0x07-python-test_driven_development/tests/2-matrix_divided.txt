=============================================================
matrix_divided function from matrix_divided module
=============================================================

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing the matrix by 3:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing matrix by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Passing a tuple inside the list:
    >>> matrix_divided([(1, 2, 3), [4, 5, 6], [7, 8, 9]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a string inside the matrix:
    >>> matrix_divided([[1, 2, 3], [4, 5, '6']], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Divisor set to string:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 'divisor')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Matrix with different lengths of row:
    >>> matrix_divided([[1, 2], [4, 5, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
